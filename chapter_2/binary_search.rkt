(define (binary-search el list)
  (let loop ((p 0)
             (q (floor (/ (- (length list) 1) 2)))
             (r (- (length list) 1)))
    (let ((elt (list-ref list q)))
      (if (= r p)   
          (if (= elt el) q '())
          (cond ((= el elt) q)
                ((< el elt) (loop p (- q (floor (/ (+ (- q p) 1) 2)) q))
                (else (loop q (+ q (floor (/ (+ (- r q) 1) 2))) r)))))))